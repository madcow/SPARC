GAS    Game Archive System running on the
SPARC  Software Preservation Architecture

Written by Leon Krieg <info@madcow.dev>.

License undetermined right now. Not to be confused with the
GNU assembler (If this overwrites your assembler config don't
write me an angry email). This repository is just a public
mirror for eventual (I hope) release. No sources until then.

# About the Project

A unified architecture to run different types of old video
game platforms. Most important are emulation accuracy, ease of
use and portability of user files and library. Runs on Windows
and Linux either natively or with SDL2. Maybe it could even run
as an UWP app for Xbox later?

TODO: Project description.

# General Notes

The goal should be to preserve the hardware that is not sold
anymore and NOT any software like the BIOS or games. The user
makes a memory backup of their system and game copies and
provide the ROM files for the emulator core.

Bottom line is: Don't touch intellectual property, not even
with a 10-foot pole. Don't even look at Mario the wrong way.

# Build on Linux

To build and install this project run the following commands.
gcc and make are required (and sudo might be needed to install
depending on user permissions).

  configure
  make && make install

TODO: Win32 build documentation.

# File Structure

## Global Files

The settings in /etc/gas.conf are overwritten by local user
settings. They are only used if there are no user files present
(and no write access to create them), or if the user profile is
set to global.

  /etc/gas.cfg
  /usr/gas/rom/

## User Files

Local user files are stored in ~/.local/.share/gas/. Saves are
packaged together for easier portability but can be exported back
into the exact same format as on real hardware (to write on a
memory card for example).

  saves.bee
  config.cfg

No plans to support savestates.
TODO: File structure documentation.

# Milestones

- Linux X11, ALSA abstraction layer
- Win32 ASIO, WASAPI, XInput abstraction layer
- SDL2  cross-platform (maybe Xbox UWP later?)
- Game Gear + Master System emulation: Z80, VDP, PSG
- Game Boy (including Color and Advance)
- NES / SNES

TODO: Milestone documentation.

# Name Alternatives

Possible name alternatives ranging from
okay to kafkaesque naming territory:

- BEE      Better Emulation Engine. 3 letters and can be written
           hexadecimal as 0xBEE for file signatures. Followed by
           the type nibble 0-F. The last possible package type is
           0xBEEF. It's pretty magical and should be the file
           extension instead of pak.

- GEAR     Game Emulation Architecture
- PIMPLE   Platform Independent Media Preservation
           and Legacy Emulator

- REVIVE   Retro Emulator for Vintage Interactive
           Video Entertainment

- BEEHIVE  Better Emulation Engine for Highly
           Integrated Virtual Environments

- MENIMEM  My Extremly Naive Implementation of
           Emulators (Eminem might sue)

TODO: Stop thinking of stupid names.
TODO: Documentation.
